version: 2
jobs:
  build:
    working_directory: ~/project
    docker:
      - image: rocker/tidyverse
    steps:
      - add_ssh_keys:
          fingerprints:
            - "dc:5f:39:48:00:b4:72:34:e1:d2:c4:e1:1f:d1:e2:ce" #plotlydocbot
      - checkout
      - restore_cache:
          keys:
            - cache4
      - run:
          name: Install container-level dependencies
          command: |
            sudo apt-get update -y
            sudo apt-get install -y curl python3-pip  python3-venv ssh-client ssh git
            pip3 install virtualenv
      - run:
          name: Keyscan Github (HACK)
          command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run:
          name: install application-level dependencies
          command: |
            sudo apt-get install -y pandoc libudunits2-dev libgdal-dev libxt-dev libglu1-mesa-dev libfftw3-dev libglpk40 libxml2-dev libcurl4-openssl-dev  apt-transport-https software-properties-common
            sudo R -e 'install.packages(c("curl", "devtools", "mvtnorm", "hexbin", "tidyverse", "tidymodels", "kknn", "kernlab", "pracma", "reshape", "reshape2", "tsne", "umap", "rsvd", "dash", "tidyquant", "ggplot2", "datasets", "fastDummies", "rWind")); devtools::install_github("ropensci/plotly"); devtools::install_github("johannesbjork/LaCroixColoR"); install.packages("BiocManager"); BiocManager::install("EBImage"); devtools::install_deps(dependencies = TRUE) '
            sudo R -e 'devtools::install_github("hypertidy/anglr@v0.7.0", dependencies = TRUE) '
            sudo R -e 'devtools::install_github("plotly/dash-daq", dependencies = TRUE, upgrade = TRUE) '
            sudo R -e 'devtools::install_deps(dependencies = TRUE) '
      - save_cache:
          key: cache4
          paths:
            - "/usr/local/lib/R/site-library"
      - store_artifacts:
          path: man/
          destination: man
      - run:
          name: build site and perform front-matter checks
          command: |
            echo ${mapbox_token} > .mapbox_token
            rm -rf build
            mkdir build
            mkdir build/ggplot2
            mkdir build/r
            for i in r/*.Rmd; do cat what-about-dash.md >> $i; Rscript -e "rmarkdown::render('$i', output_dir='build/r')"; done
            for i in ggplot2/*.Rmd; do cat what-about-dash.md >> $i; Rscript -e "rmarkdown::render('$i', output_dir='build/ggplot2')"; done
            python3 -m venv venv
            . venv/bin/activate
            pip3 install python-frontmatter
            curl https://raw.githubusercontent.com/plotly/graphing-library-docs/master/front-matter-ci.py > front-matter-ci.py
            python front-matter-ci.py build/r
            curl https://raw.githubusercontent.com/plotly/graphing-library-docs/master/check-or-enforce-order.py > check-or-enforce-order.py
            python check-or-enforce-order.py build/r enforce
      - run:
          name: deploy to plotly/r.docs:built
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              cd build
              git init
              git config user.name plotlydocbot
              git config user.email accounts@plot.ly
              rm -rf r/*.html
              sed -i.bkp 's/<!--.*-->//g' r/*md && rm r/*.bkp # remove html comments
              sed -z -i.bkp 's/```{=html}\n<div/<div/g' r/*md && rm r/*.bkp # remove html backticks
              sed -z -i.bkp 's/script>\n```/script>/g' r/*md && rm r/*.bkp # remove html backticks
              rm -rf ggplot2/*.html
              sed -i.bkp 's/<!--.*-->//g' ggplot2/*md && rm ggplot2/*.bkp
              sed -z -i.bkp 's/```{=html}\n<div/<div/g' ggplot2/*md && rm ggplot2/*.bkp # remove html backticks
              sed -z -i.bkp 's/script>\n```/script>/g' ggplot2/*md && rm ggplot2/*.bkp # remove html backticks
              git add *
              git commit -m "build of https://github.com/plotly/plotly.r-docs/commit/${CIRCLE_SHA1}"
              git push --force git@github.com:plotly/plotly.r-docs.git master:built
              rm -rf .git
            fi

      - run:
          name: trigger plotly/graphing-library-docs build
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git clone --depth=1 git@github.com:plotly/graphing-library-docs.git
              cd graphing-library-docs
              git config user.name plotlydocbot
              git config user.email accounts@plot.ly
              git commit --allow-empty -m "deploying https://github.com/plotly/plotly.r-docs/commit/${CIRCLE_SHA1}"
              git push
              cd ..
              rm -rf graphing-library-docs
            fi
